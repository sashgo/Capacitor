name: Build iOS
run-name: Creating Production Ready iOS App üöÄ
on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build IPA
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: Actions_ios
          
      # - name: Install the Apple certificate and provisioning profile
      #   env:
      #     BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      #     P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      #     BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      #     KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      #   run: |
      #     # create variables
      #     CERTIFICATE_PATH=$RUNNER_TEMP/Certificates_Dev.p12
      #     PP_PATH=$RUNNER_TEMP/communicate_app_development.mobileprovision
      #     KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

      #     # import certificate and provisioning profile from secrets
      #     echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
      #     echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

      #     # create temporary keychain
      #     security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      #     security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
      #     security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

      #     # import certificate to keychain
      #     security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
      #     security list-keychain -d user -s $KEYCHAIN_PATH

      #     # apply provisioning profile
      #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #     cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.8.1
        with:
          check-latest: true

      - name: install dependencies
        run: npm ci

      - name: Create Build Folder
        run: npm run build



      # - name: Run App
      #   run: ng run app:build:production


      - name: Add ios folder if not present
        run: if [ ! -d "./ios" ]; then npx cap add ios; fi

      - name: Capacitor sync
        run: npx cap sync

      - name: Capacitor update
        run: npx cap update

      - name: Capacitor copy
        run: npx cap copy

      - name: iOS Build/Release Action
        # You may pin to the exact commit or the version.
        # uses: hectorguerrini/build-ios-action@32a06e7b8b78dbd4e9e956bc84d3ee7ec8442130
        uses: hectorguerrini/build-ios-action@v1.0.4
        with:
          # Project path
          project-path: ".ios/App/App"
          # Base64 encoded p12 file (key + cert)
          p12-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          # Base64 encoded mobileprovision file
          mobileprovision-base64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          # For example, iOS Distribution
          code-signing-identity: iOS Developer
          # Team id
          team-id: TUGFNJHXEQ
          # # Workspace path
          workspace-path: ".ios/App/App" # optional, default is 
          # Options app-store, ad-hoc, package, enterprise, development, or developer-id
          # export-method: development # optional, default is development
          # For example, Debug, Release
          # configuration: Release # optional, default is Release
          # Certificate password
          certificate-password: ${{ secrets.P12_PASSWORD }} # optional, default is 
          # # Output path of ipa
          # output-path: # optional, default is output.ipa
          # # Scheme
          # scheme: # optional, default is 
          # # Targets to disable automatic code signing. Input targets separated by ,. For example, 'MyApp,YourApp'.
          # disable-targets: # optional, default is 
          # # Boolean to tell if `pod install` should be run during build.
          # build-pods: # optional
          # # The path to the Podfile.
          # pods-path: # optional, default is Podfile

      # - name: Build project
      #   run: xcodebuild -workspace './ios/App/App.xcworkspace' -scheme App -destination generic/platform=iOS -archivePath App.xcarchive archive

      # - name: üçª Assemble IPA
      #   run: xcodebuild archive -archivePath App.xcarchive -exportArchive -exportOptionsPlist ./archive.plist -exportPath output -allowProvisioningUpdates

